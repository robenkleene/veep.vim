*partshell.txt*    Partshell: Vim Plugin for Shell Commands

==============================================================================
Introduction                                      *partshell*
==============================================================================
Partshell is a Vim plugin that adds helper commands for working with shell
commands in Vim. For example, `:Pshgrep` is an easy way to use any `grep`
program, the same way Vim's builtin `:grep` command works. For example,
`:Pshgrep rg --vimgrep foo` will use `ripgrep`.

Adding a bang (`!`) mirrors the behavior of equivalent Vim built-in commands.
For example, `:Pshgrep!` won't automatically jump to the first match, just like
`:grep!`.

==============================================================================
Commands                                         *partshell-commands*
==============================================================================
The following commands are provided by Partshell:

------------------------------------------------------------------------------
Pshargs                                            *:Pshargs*
------------------------------------------------------------------------------
`:Psha[rgs][!]`

Populates the argument list with the result of a shell command. Each line is
interpreted as a file path. A bang (`!`) modifies behavior as expected.

Example:

    :Pshargs fd partshell

Uses `fd` to populate the argument list with files matching "partshell".

------------------------------------------------------------------------------
Pshgrep                                            *:Pshgrep*
------------------------------------------------------------------------------
`:Pshg[rep][!]`

Runs a shell command as a `grep` program, populating the quickfix list with
matching lines. With a bang (`!`), it won't jump to the first match.

Example:

    :Pshgrep rg --vimgrep partshell

Uses `ripgrep` to populate the quickfix list with lines containing "partshell".

------------------------------------------------------------------------------
Pshlgrep                                           *:Pshlgrep*
------------------------------------------------------------------------------
`:Pshlg[rep][!]`

The same as `:Pshgrep`, but populates the location list instead of the quickfix
list.

------------------------------------------------------------------------------
Pshmake                                            *:Pshmake*
------------------------------------------------------------------------------
`:Pshm[ake][!]`

Runs a `make` program, populating the quickfix list with error lines. With a
bang (`!`), it won't jump to the first match.

Example:

    :Pshmake clang %

Compiles the current file with `clang`.

------------------------------------------------------------------------------
Pshnew                                             *:Pshnew*
------------------------------------------------------------------------------
`:Pshn[ew][!]`

Creates a new buffer with the output of a shell command. The buffer is named
after the command. With a bang (`!`), the same buffer is reused for subsequent
runs.

Example:

    :Pshnew git diff

Creates a new buffer named "git diff" with the output of the command.

------------------------------------------------------------------------------
P Command                                         *:P*
------------------------------------------------------------------------------
`:P`

Applies a command to the visual selection, including partial lines. This works
like the range-based behavior of Vim commands, but also supports selections
with `v` or `<C-v>`.

Example:

Given a Markdown table:

    | Header 1     | Header 2     | Header 3     |
    |--------------|--------------|--------------|
    | Row 1 Cell 1 | Row 1 Cell 2 | Row 1 Cell 3 |
    | Row 2 Cell 1 | Row 2 Cell 2 | Row 2 Cell 3 |

Use blockwise `<C-v>` to select "Header 3" in rows 1-3, then:

    :P s/row/Row

This replaces "row" with "Row" in the selection.

==============================================================================
vim:tw=78:ts=8:ft=help
